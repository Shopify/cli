name: 'Setup CLI deps'
description: 'Sets up dependencies necessary for cli'
inputs:
  node-version:
    required: true
    description: 'Node version'
runs:
  using: 'composite'
  steps:
    - name: Set Git configuration
      run: |
        git config --global user.email "cli-foundations@shopify.com"
        git config --global user.name "CLI Foundations"
      shell: bash
    - name: Install Ruby
      uses: ruby/setup-ruby@d3c9825d67b0d8720afdfdde5af56c79fdb38d16 # pin@v1
      with:
        ruby-version: ${{ env.RUBY_VERSION }}
        bundler-cache: false
    - name: Install Bundler
      run: gem install bundler -v ${{ env.BUNDLER_VERSION }}
      shell: bash
    - name: Install Bundler dependencies
      working-directory: packages/cli-kit/assets/cli-ruby
      run: bundle install
      shell: bash
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}
    - name: Install pnpm
      uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # pin@v2.2.4
      with:
        version: ${{ env.PNPM_VERSION }}
        run_install: false
    - name: Get pnpm store directory
      id: pnpm-cache-path
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache-path.outputs.STORE_PATH }}
        key: ${{ runner.os }}-${{ inputs.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.node-version }}-pnpm-store-
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      shell: bash
    - name: Derive appropriate SHAs for base and head for `nx affected` commands
      uses: nrwl/nx-set-shas@177b48373c6dc583ce0d9257ffb484bdd232fedf # pin@v3.0.2
