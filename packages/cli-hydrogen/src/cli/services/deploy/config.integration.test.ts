import {getDeployConfig} from './config.js'
import {gitInit} from '../../prompts/git-init.js'
import {describe, beforeEach, it, expect, vi} from 'vitest'
import {error, file, git} from '@shopify/cli-kit'

const defaultConfig = {deploymentToken: 'abcdefg', dmsAddress: 'https://integration.test', healthCheck: true}
const mockedGitInitPrompt = vi.fn()

beforeEach(() => {
  vi.mock('../../prompts/git-init.js')
  vi.mocked(gitInit).mockImplementation(mockedGitInitPrompt)
})

describe('getDeployConfig', () => {
  describe("User doesn't want to initialize new repository", () => {
    it('silent abort since outside git directory', async () => {
      await file.inTemporaryDirectory(async (tmpDir) => {
        mockedGitInitPrompt.mockResolvedValue(false)

        await expect(getDeployConfig({...defaultConfig, path: tmpDir})).rejects.toThrow(new error.AbortSilent())
      })
    })
  })

  describe('User does initialize new repository', () => {
    it('extract basic information from git', async () => {
      await file.inTemporaryDirectory(async (tmpDir) => {
        mockedGitInitPrompt.mockResolvedValue(true)
        const defaultBranchConfig = await git.factory().getConfig('init.defaultBranch')
        await file.touch(`${tmpDir}/integration.txt`)

        const config = await getDeployConfig({...defaultConfig, path: tmpDir})

        expect(config.commitMessage).toBe('Initial commit generated by deploy-hydrogen')
        expect(config.commitRef).toBe(`refs/heads/${defaultBranchConfig.value ?? 'master'}`)
        expect(config.deploymentToken).toBe(defaultConfig.deploymentToken)
        expect(config.dmsAddress).toBe(defaultConfig.dmsAddress)
        expect(config.healthCheck).toBe(defaultConfig.healthCheck)
        expect(config.path).toBe(tmpDir)
        expect(new Date(config.timestamp).getTime()).toBeLessThan(new Date().getTime())
        // Can't test config.commitAuthor & config.commitSha. The integration test can be run anywhere and
        // these properties would cause flakiness. The commit author could or couldn't be set and there is
        // no clear fallback like for default branch.
      })
    })
  })
})
