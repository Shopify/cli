import {DeployConfig, ReqDeployConfig} from './types.js'
import {gitInit} from '../../prompts/git-init.js'
import {git, error} from '@shopify/cli-kit'

export const validateProject = async (config: DeployConfig) => {
  await git.ensurePresentOrAbort()
  try {
    await git.ensureInsideGitDirectory(config.path)
  } catch (err: unknown) {
    if ((err as error.Abort)?.message !== git.OutsideGitDirectoryError().message) throw error

    const shouldGitInit = await gitInit()

    if (!shouldGitInit) throw new error.AbortSilent()

    await git.initializeRepository(config.path)
    git.createGitIgnore(config.path, git.GitIgnoreTemplate.Hydrogen)
    await git.commitAll('Initial commit generated by deploy-hydrogen', {directory: config.path})
  }
}

export const fillDeployConfig = async (config: DeployConfig): Promise<ReqDeployConfig> => {
  const [latestCommit, commitRef] = await Promise.all([
    git.getLatestCommit(config.path),
    git.getHeadSymbolicRef(config.path),
  ])

  return {
    ...config,
    commitMessage: config.commitMessage ?? latestCommit.message,
    commitAuthor: config.commitAuthor ?? latestCommit.author_name,
    commitSha: latestCommit.hash,
    timestamp: latestCommit.date,
    commitRef,
  }
}
