import {TestFlags} from './test.types.js'
import {Locator, Page} from 'playwright'
import {joinPath, cwd} from '@shopify/cli-kit/node/path'
import {renderError, renderSuccess} from '@shopify/cli-kit/node/ui'
import {fileExists, writeFile} from '@shopify/cli-kit/node/fs'
import {outputInfo} from '@shopify/cli-kit/node/output'

const DEFAULT_LOCATORS_PATH = 'shopify-test-locators.js'

type LocatorFunction = ({page, flags}: {page: Page; flags: TestFlags}) => Promise<Locator>

export interface Locators {
  addToCartButton: LocatorFunction
  productLink: LocatorFunction
  checkoutLink: LocatorFunction
  collectionLink: LocatorFunction
  acceptCookiesButton: LocatorFunction
}

export async function buildLocators({flags}: {flags: TestFlags}): Promise<Locators> {
  try {
    const locatorsPath = flags.locators || DEFAULT_LOCATORS_PATH
    const fullPath = joinPath(cwd(), locatorsPath)

    // Check if the locators file exists
    if (!(await fileExists(fullPath))) {
      // Generate the locators file if it doesn't exist and no custom path was provided
      await generateDefaultLocatorsFile(fullPath)
    }

    try {
      const customLocators = await import(fullPath)

      const locators = {
        addToCartButton: customLocators?.locateAddToCartButton,
        productLink: customLocators?.locateProductLink,
        checkoutLink: customLocators?.locateCheckoutLink,
        collectionLink: customLocators?.locateCollectionLink,
        acceptCookiesButton: customLocators?.locateAcceptCookiesButton,
      }

      return locators
    } catch (importError) {
      // If import fails but we're using the default path, throw a clear error
      if (!flags.locators) {
        throw new Error(`Failed to import generated locators file: ${importError}`)
      }
      throw importError
    }
  } catch (error) {
    renderError({
      headline: 'Unable to find or load locators file.',
      body: `File: ${joinPath(cwd(), flags.locators || DEFAULT_LOCATORS_PATH)}`,
    })

    if (flags.verbose) {
      throw error
    } else {
      process.exit(1)
    }
  }
}

/**
 * Generates a default locators file with standard selectors
 */
async function generateDefaultLocatorsFile(filePath: string): Promise<void> {
  outputInfo(`Generating default locators file at ${filePath}...`)

  // Generate locators file content
  const locatorsFileContent = `
/**
 * Default Shopify storefront test locators
 * Generated by Shopify CLI
 */

/**
 * Locates the Add to Cart button
 */
export async function locateAddToCartButton({page}) {
  return page.getByRole('button', {name: 'Add to Cart'})
}

/**
 * Locates product links
 */
export async function locateProductLink({page}) {
  return page.locator('a[href^="/products/"]').filter({visible: true})
}

/**
 * Locates the checkout link
 */
export async function locateCheckoutLink({page}) {
  return page.getByRole('link', {name: 'Checkout'})
}

/**
 * Locates collection links
 */
export async function locateCollectionLink({page}) {
  return page.locator('a[href^="/collections/"]')
}

/**
 * Locates the accept cookies button
 */
export async function locateAcceptCookiesButton({page}) {
  return page.getByRole('button', {name: 'Accept'})
}
`.trim()

  await writeFile(filePath, locatorsFileContent)

  renderSuccess({
    headline: `Default locators file generated at ${filePath}`,
  })
}
