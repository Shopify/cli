/* eslint-disable no-catch-all/no-catch-all */
import {writeFile, fileExists, readFile} from '@shopify/cli-kit/node/fs'
import {joinPath} from '@shopify/cli-kit/node/path'
import {exec, captureOutput} from '@shopify/cli-kit/node/system'
import {outputInfo, outputSuccess, outputDebug, outputWarn} from '@shopify/cli-kit/node/output'
import {ensureInsideGitDirectory} from '@shopify/cli-kit/node/git'
import {AbortError} from '@shopify/cli-kit/node/error'

// Git attributes for Shopify theme multi-environment support
const SHOPIFY_GIT_ATTRIBUTES = [
  '',
  '# Shopify Theme Multi-Environment Configuration',
  "# Auto-generated by Shopify CLI - Don't edit manually",
  '',
  '# Environment-specific files (preserve current environment during merge)',
  'config/settings_data.json merge=shopify-preserve-env',
  'templates/*.json merge=shopify-preserve-env',
  'sections/*.json merge=shopify-preserve-env',
  'locales/*/checkout.json merge=shopify-preserve-env',
  'locales/*/customer.json merge=shopify-preserve-env',
  'locales/*/sections.json merge=shopify-preserve-env',
  '',
  '# Code files (standard merge behavior)',
  '*.liquid diff=text',
  'assets/* diff=text',
  'config/settings_schema.json diff=text',
  '',
].join('\n')

const GITATTRIBUTES_MARKER = '# Shopify Theme Multi-Environment Configuration'

/**
 * Setup Git configuration for multi-environment theme development
 */
export async function setupMultiEnvironmentGit(rootPath: string): Promise<void> {
  outputInfo('Configuring Git for multi-environment theme development...')

  await ensureInsideGitDirectory(rootPath)

  // Setup Git attributes
  await setupGitAttributes(rootPath)

  // Configure custom merge drivers
  await configureGitMergeDrivers(rootPath)

  // Validate configuration
  await validateGitSetup(rootPath)

  outputSuccess('✅ Git configured for multi-environment theme development')
  outputInfo('')
  outputInfo('Your Git repository now supports conflict-free multi-environment merges!')
  outputInfo('Settings will be preserved per environment while code changes merge cleanly.')
}

/**
 * Setup .gitattributes file with Shopify theme merge configuration
 */
async function setupGitAttributes(rootPath: string): Promise<void> {
  const gitAttributesPath = joinPath(rootPath, '.gitattributes')

  let existingContent = ''
  if (await fileExists(gitAttributesPath)) {
    existingContent = await readFile(gitAttributesPath, {encoding: 'utf8'})

    // Check if already configured
    if (existingContent.includes(GITATTRIBUTES_MARKER)) {
      outputInfo('.gitattributes already configured for multi-environment themes')
      return
    }
  }

  // Append Shopify configuration
  const newContent = existingContent + SHOPIFY_GIT_ATTRIBUTES
  await writeFile(gitAttributesPath, newContent)

  outputInfo('✅ Updated .gitattributes with Shopify theme merge configuration')
}

/**
 * Configure Git merge drivers for Shopify theme files
 */
async function configureGitMergeDrivers(rootPath: string): Promise<void> {
  try {
    // Configure "preserve environment" merge driver
    // Use 'shopify' assuming it's in PATH - if not available, Git will show helpful error
    const driverCommand = 'shopify theme git-merge-preserve %O %A %B %L'

    await exec('git', ['config', 'merge.shopify-preserve-env.driver', driverCommand], {
      cwd: rootPath,
    })

    await exec('git', ['config', 'merge.shopify-preserve-env.name', 'Shopify theme environment-preserving merge'], {
      cwd: rootPath,
    })

    outputInfo('✅ Configured Git merge drivers')
  } catch (error) {
    throw new AbortError(`Failed to configure Git merge drivers: ${error}`)
  }
}

/**
 * Validate Git setup is working correctly
 */
async function validateGitSetup(rootPath: string): Promise<void> {
  try {
    // Check that merge driver is configured
    const result = await captureOutput('git', ['config', 'merge.shopify-preserve-env.driver'], {cwd: rootPath})

    if (!result.includes('shopify theme git-merge-preserve')) {
      throw new Error('Merge driver not properly configured')
    }

    outputDebug('Git configuration validation successful')
  } catch (error) {
    // Expected: validation can fail in some environments, this is non-critical
    outputWarn(`Git configuration validation failed: ${error}`)
    outputInfo('The setup may still work, but please verify manually if you encounter issues')
  }
}

/**
 * Reset Git configuration to remove Shopify theme multi-environment setup
 */
export async function resetGitConfiguration(rootPath: string): Promise<void> {
  outputInfo('Resetting Git configuration...')

  try {
    // Remove merge driver configuration
    await exec('git', ['config', '--unset', 'merge.shopify-preserve-env.driver'], {cwd: rootPath})
    await exec('git', ['config', '--unset', 'merge.shopify-preserve-env.name'], {cwd: rootPath})

    // Note: We don't automatically remove .gitattributes content as it might be committed
    outputWarn('Note: .gitattributes file content not automatically removed')
    outputInfo('Remove Shopify theme configuration from .gitattributes manually if needed')

    outputSuccess('✅ Git configuration reset')
  } catch (error) {
    // Expected: reset errors can occur when config doesn't exist, non-critical
    outputWarn(`Some configuration may not have been reset: ${error}`)
  }
}

/**
 * Check if Git is configured for multi-environment theme development
 */
export async function isGitConfiguredForMultiEnv(rootPath: string): Promise<boolean> {
  try {
    const result = await captureOutput('git', ['config', 'merge.shopify-preserve-env.driver'], {cwd: rootPath})

    return result.includes('shopify theme git-merge-preserve')
  } catch (error) {
    // Expected: command fails when Git is not configured for multi-env
    return false
  }
}
