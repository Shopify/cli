{
  "name": "app",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/app/src",
  "projectType": "library",
  "tags": ["scope:feature"],
  "implicitDependencies": ["ui-extensions-dev-console"],
  "targets": {
    "clean": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm rimraf dist/",
        "cwd": "packages/app"
      }
    },
    "build": {
      "executor": "nx:run-commands",
      "outputs": ["{workspaceRoot}/dist"],
      "inputs": ["{projectRoot}/src/**/*", "{projectRoot}/package.json"],
      "options": {
        "command": "pnpm tsc -b ./tsconfig.build.json",
        "cwd": "packages/app"
      }
    },
    "lint": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm eslint \"src/**/*.{ts,tsx}\"",
        "cwd": "packages/app"
      }
    },
    "lint:fix": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm eslint 'src/**/*.{ts,tsx}' --fix",
        "cwd": "packages/app"
      }
    },
    "test": {
      "executor": "nx:run-commands",
      "dependsOn": ["^build"],
      "options": {
        "command": "pnpm vitest run",
        "cwd": "packages/app"
      }
    },
    "test:coverage": {
      "executor": "nx:run-commands",
      "dependsOn": ["build"],
      "options": {
        "command": "pnpm vitest run --reporter json --coverage --outputFile ./coverage/report.json",
        "cwd": "packages/app"
      }
    },
    "test:watch": {
      "executor": "nx:run-commands",
      "dependsOn": ["^build"],
      "options": {
        "command": "pnpm vitest watch",
        "cwd": "packages/app"
      }
    },
    "type-check": {
      "executor": "nx:run-commands",
      "options": {
        "command": "pnpm tsc --noEmit",
        "cwd": "packages/app"
      }
    },
    "graphql-codegen": {
      "executor": "nx:noop",
      "dependsOn": ["graphql-codegen:formatting"]
    },
    "graphql-codegen:formatting": {
      "executor": "nx:run-commands",
      "dependsOn": ["graphql-codegen:postfix"],
      "inputs": [{ "dependentTasksOutputFiles": "**/*.ts" }],
      "outputs": [
        "{projectRoot}/src/cli/api/graphql/partners/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/business-platform-destinations/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/business-platform-organizations/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/app-dev/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/app-management/generated/**/*.ts"
      ],
      "options": {
        "commands": [
          "pnpm eslint 'src/cli/api/graphql/partners/generated/**/*.{ts,tsx}' --fix",
          "pnpm eslint 'src/cli/api/graphql/business-platform-destinations/generated/**/*.{ts,tsx}' --fix",
          "pnpm eslint 'src/cli/api/graphql/business-platform-organizations/generated/**/*.{ts,tsx}' --fix",
          "pnpm eslint 'src/cli/api/graphql/app-dev/generated/**/*.{ts,tsx}' --fix",
          "pnpm eslint 'src/cli/api/graphql/app-management/generated/**/*.{ts,tsx}' --fix"
        ],
        "cwd": "packages/app"
      }
    },
    "graphql-codegen:generate:partners": {
      "executor": "nx:run-commands",
      "inputs": ["{workspaceRoot}/graphql.config.ts", "{projectRoot}/src/cli/api/graphql/partners/**/*.graphql"],
      "outputs": ["{projectRoot}/src/cli/api/graphql/partners/generated/**/*.ts"],
      "options": {
        "commands": [
          "pnpm exec graphql-codegen --project=partners"
        ],
        "cwd": "{workspaceRoot}"
      }
    },
    "graphql-codegen:generate:business-platform-destinations": {
      "executor": "nx:run-commands",
      "inputs": ["{workspaceRoot}/graphql.config.ts", "{projectRoot}/src/cli/api/graphql/business-platform-destinations/**/*.graphql"],
      "outputs": ["{projectRoot}/src/cli/api/graphql/business-platform-destinations/generated/**/*.ts"],
      "options": {
        "commands": [
          "pnpm exec graphql-codegen --project=businessPlatformDestinations"
        ],
        "cwd": "{workspaceRoot}"
      }
    },
    "graphql-codegen:generate:business-platform-organizations": {
      "executor": "nx:run-commands",
      "inputs": ["{workspaceRoot}/graphql.config.ts", "{projectRoot}/src/cli/api/graphql/business-platform-organizations/**/*.graphql"],
      "outputs": ["{projectRoot}/src/cli/api/graphql/business-platform-organizations/generated/**/*.ts"],
      "options": {
        "commands": [
          "pnpm exec graphql-codegen --project=businessPlatformOrganizations"
        ],
        "cwd": "{workspaceRoot}"
      }
    },
    "graphql-codegen:generate:app-dev": {
      "executor": "nx:run-commands",
      "inputs": ["{workspaceRoot}/graphql.config.ts", "{projectRoot}/src/cli/api/graphql/app-dev/**/*.graphql"],
      "outputs": ["{projectRoot}/src/cli/api/graphql/app-dev/generated/**/*.ts"],
      "options": {
        "commands": [
          "pnpm exec graphql-codegen --project=appDev"
        ],
        "cwd": "{workspaceRoot}"
      }
    },
    "graphql-codegen:generate:app-management": {
      "executor": "nx:run-commands",
      "inputs": ["{workspaceRoot}/graphql.config.ts", "{projectRoot}/src/cli/api/graphql/app-management/**/*.graphql"],
      "outputs": ["{projectRoot}/src/cli/api/graphql/app-management/generated/**/*.ts"],
      "options": {
        "commands": [
          "pnpm exec graphql-codegen --project=appManagement"
        ],
        "cwd": "{workspaceRoot}"
      }
    },
    "graphql-codegen:postfix": {
      "executor": "nx:run-commands",
      "dependsOn": [
        "graphql-codegen:generate:partners",
        "graphql-codegen:generate:business-platform-destinations",
        "graphql-codegen:generate:business-platform-organizations",
        "graphql-codegen:generate:app-dev",
        "graphql-codegen:generate:app-management"
      ],
      "inputs": [{ "dependentTasksOutputFiles": "**/*.ts" }],
      "outputs": [
        "{projectRoot}/src/cli/api/graphql/partners/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/business-platform-destinations/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/business-platform-organizations/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/app-dev/generated/**/*.ts",
        "{projectRoot}/src/cli/api/graphql/app-management/generated/**/*.ts"
      ],
      "options": {
        "commands": [
          "find ./packages/app/src/cli/api/graphql/partners/generated/ -type f -name '*.ts' -exec sh -c 'sed -i \"\" \"s|import \\* as Types from '\\''./types'\\'';|import \\* as Types from '\\''./types.js'\\'';|g; s|export const \\([A-Za-z0-9_]*\\)Document =|export const \\1 =|g\" \"$0\"' {} \\;",
          "find ./packages/app/src/cli/api/graphql/business-platform-destinations/generated/ -type f -name '*.ts' -exec sh -c 'sed -i \"\" \"s|import \\* as Types from '\\''./types'\\'';|import \\* as Types from '\\''./types.js'\\'';|g; s|export const \\([A-Za-z0-9_]*\\)Document =|export const \\1 =|g\" \"$0\"' {} \\;",
          "find ./packages/app/src/cli/api/graphql/business-platform-organizations/generated/ -type f -name '*.ts' -exec sh -c 'sed -i \"\" \"s|import \\* as Types from '\\''./types'\\'';|import \\* as Types from '\\''./types.js'\\'';|g; s|export const \\([A-Za-z0-9_]*\\)Document =|export const \\1 =|g\" \"$0\"' {} \\;",
          "find ./packages/app/src/cli/api/graphql/app-dev/generated/ -type f -name '*.ts' -exec sh -c 'sed -i \"\" \"s|import \\* as Types from '\\''./types'\\'';|import \\* as Types from '\\''./types.js'\\'';|g; s|export const \\([A-Za-z0-9_]*\\)Document =|export const \\1 =|g\" \"$0\"' {} \\;",
          "find ./packages/app/src/cli/api/graphql/app-management/generated/ -type f -name '*.ts' -exec sh -c 'sed -i \"\" \"s|import \\* as Types from '\\''./types'\\'';|import \\* as Types from '\\''./types.js'\\'';|g; s|export const \\([A-Za-z0-9_]*\\)Document =|export const \\1 =|g\" \"$0\"' {} \\;"
        ],
        "cwd": "{workspaceRoot}"
      }
    }
  }
}

