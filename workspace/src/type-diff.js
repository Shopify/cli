#!/usr/bin/env node

import * as path from 'pathe'
import * as url from 'url'
import {execa} from 'execa'
import fg from 'fast-glob'
import {temporaryDirectoryTask} from 'tempy'
import git from 'simple-git'
import {setOutput} from '@actions/core'
import {promises as fs, existsSync} from 'fs'
import {cloneCLIRepository} from './utils/git.js'
import {logMessage, logSection} from './utils/log.js'
import {createRequire} from 'module'

const require = createRequire(import.meta.url)
const gitDiff = require('git-diff')

async function build(directory, {name}) {
  logSection(`Building ${name}`)
  return await fg('packages/cli-kit/dist/**/*.d.ts', {absolute: false, cwd: directory, ignore: ['**/*.test.d.ts']})
}

async function report({baselineDirectory, currentDirectory, baselineFiles, currentFiles}) {
  const contents = await Promise.all(
    currentFiles.map(async (currentFile) => {
      const fileExistsInBaseline = baselineFiles.includes(currentFile)
      if (fileExistsInBaseline) {
        const currentContent = (await fs.readFile(path.join(currentDirectory, currentFile))).toString().trim()
        const baselineContent = (await fs.readFile(path.join(baselineDirectory, currentFile))).toString().trim()
        if (currentContent !== baselineContent) {
          return {
            existing: `<details>
<summary>
${currentFile}
</summary>

\`\`\`diff
${gitDiff(baselineContent, currentContent)}
\`\`\`

</details>`,
          }
        } else {
          return {}
        }
      } else {
        return {
          new: `
<details>
<summary>
${currentFile}
</summary>

\`\`\`diff
${await fs.readFile(path.join(currentDirectory, currentFile))}
\`\`\`

</details>`,
        }
      }
    }),
  )

  let newTypeDeclarationsReport = ``
  let existingTypeDeclarationsReport = ``
  contents.forEach((content) => {
    if (content.new) {
      newTypeDeclarationsReport += content.new
    } else if (content.existing) {
      existingTypeDeclarationsReport += content.existing
    }
  })

  if (newTypeDeclarationsReport === '' && existingTypeDeclarationsReport === '') {
    return
  }

  setOutput(
    'report',
    `## Differences in type declarations
We detected differences in the type declarations generated by Typescript for this branch compared to the baseline (\'main\' branch). Please, review them to **ensure they are backward-compatible.** Here are some important things to keep in mind:
- Some seemingly private modules might be re-exported through public modules.
- If the branch is behind \`main\` you might see odd diffs, rebase \`main\` into this branch.

### New type declarations
${newTypeDeclarationsReport === '' ? 'We found no new type declarations in this PR' : newTypeDeclarationsReport}

### Existing type declarations
${
  existingTypeDeclarationsReport === ''
    ? 'We found no diffs with existing type declarations'
    : existingTypeDeclarationsReport
}
`,
  )
}

await temporaryDirectoryTask(async (tmpDir) => {
  const baselineDirectory = await cloneCLIRepository(tmpDir)
  const currentDirectory = path.join(url.fileURLToPath(new URL('.', import.meta.url)), '../..')
  const baselineFiles = await build(baselineDirectory, {name: 'baseline'})
  const currentFiles = await build(currentDirectory, {name: 'current'})
  await report({
    baselineDirectory,
    currentDirectory,
    baselineFiles,
    currentFiles,
  })
})
